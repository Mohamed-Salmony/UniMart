@model IEnumerable<UniMart_App.Models.Faculty>

@{
    ViewData["Title"] = "Categories";
    // Use full faculty names for filtering
    var facultyNames = Model.Select(f => f.Name).Distinct().OrderBy(n => n).ToList();
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<main class="container py-4">
    <h2 class="mb-4 display-5 fw-bold text-center" data-translate="categories">Categories</h2>

    <section class="mb-4">
        <form class="row g-2 justify-content-center" id="facultyFilterForm" autocomplete="off">
            <div class="col-12 col-md-4">
                <input type="text" class="form-control" id="facultyNameFilter" placeholder="Filter by name..." aria-label="Filter by name">
            </div>
            <div class="col-12 col-md-3">
                <select class="form-select" id="facultyCategoryFilter" aria-label="Filter by faculty name">
                    <option value="">All Faculties</option>
                    @foreach (var name in facultyNames)
                    {
                        <option value="@name">@name</option>
                    }
                </select>
            </div>
        </form>
    </section>

    <section>
        <div class="row row-cols-1 row-cols-md-3 g-4" id="facultyGrid">
        @foreach (var faculty in Model)
        {
            <div class="col" data-category="@faculty.Name">
                <article class="card h-100 shadow-sm faculty-card card-hover animate-fade-in" tabindex="0" aria-label="@faculty.Name">
                    @if (!string.IsNullOrEmpty(faculty.ImageUrl))
                    {
                        <img src="@faculty.ImageUrl" class="card-img-top" alt="@faculty.Name" style="object-fit:cover; height:200px;">
                    }
                    else
                    {
                        <div class="d-flex align-items-center justify-content-center bg-light card-img-top" style="height:200px;">
                            <span class="text-muted"><i class="bi bi-image" aria-hidden="true"></i> No Image</span>
                        </div>
                    }
                    <div class="card-body d-flex flex-column">
                        <h3 class="card-title h5 fw-bold mb-2">@faculty.Name</h3>
                        <p class="card-text text-muted mb-0">@faculty.Description</p>
                    </div>
                    <div class="card-footer bg-white border-0 mt-auto">
                        <a asp-action="Faculty" asp-controller="Home" asp-route-id="@faculty.Id" class="btn btn-primary w-100" aria-label="View details for @faculty.Name" data-translate="view_details">View Details</a>
                    </div>
                </article>
            </div>
        }
        </div>
    </section>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.card-hover').forEach(card => {
            card.addEventListener('mouseenter', () => card.classList.add('shadow-lg', 'scale-up'));
            card.addEventListener('mouseleave', () => card.classList.remove('shadow-lg', 'scale-up'));
        });
        document.querySelectorAll('.animate-fade-in').forEach((el, i) => {
            setTimeout(() => el.classList.add('fade-in-visible'), 80 * i);
        });
        const nameInput = document.getElementById('facultyNameFilter');
        const catInput = document.getElementById('facultyCategoryFilter');
        const grid = document.getElementById('facultyGrid');
        function filterFaculties() {
            const nameVal = nameInput.value.toLowerCase();
            const catVal = catInput.value;
            grid.querySelectorAll('.col').forEach(card => {
                const title = card.querySelector('.card-title').textContent.toLowerCase();
                const cat = card.getAttribute('data-category') || '';
                const nameMatch = title.includes(nameVal);
                const catMatch = !catVal || cat === catVal;
                card.style.display = (nameMatch && catMatch) ? '' : 'none';
            });
        }
        nameInput.addEventListener('input', filterFaculties);
        catInput.addEventListener('change', filterFaculties);
    });
</script>

<style>
    body { background: #f8f9fa; }
    .faculty-card {
        border-radius: 1rem;
        min-height: 100%;
        transition: transform 0.2s cubic-bezier(.4,2,.6,1), box-shadow 0.2s;
        outline: none;
    }
    .faculty-card:focus {
        box-shadow: 0 0 0 0.2rem #0d6efd33;
    }
    .scale-up {
        transform: scale(1.04);
        box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,0.15)!important;
    }
    .card-img-top { border-top-left-radius: 1rem; border-top-right-radius: 1rem; }
    .card-title { font-size: 1.35rem; }
    .card-text { font-size: 1rem; }
    .card-footer { background: none; }
    .animate-fade-in { opacity: 0; transform: translateY(30px); transition: opacity 0.5s, transform 0.5s; }
    .fade-in-visible { opacity: 1 !important; transform: none !important; }

</style>
