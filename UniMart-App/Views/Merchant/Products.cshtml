@model IEnumerable<UniMart_App.Models.Product>
@{
    ViewData["Title"] = "My Products";
    Layout = "_DashboardLayout";
}

<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0" data-translate="my_products">My Products</h2>
            <p class="text-muted" data-translate="manage_your_product_catalog">Manage your product catalog</p>
        </div>
        <a asp-action="CreateProduct" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New Product
        </a>
    </div>

    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Products Grid -->
    @if (Model.Any())
    {
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm">
                        @if (product.ProductImages != null && product.ProductImages.Any())
                        {
                            <img src="@Url.Content(product.ProductImages.First().ImageUrl)" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                        }
                        else
                        {
                            <img src="/img/default-profile.png" class="card-img-top" alt="No image" style="height: 200px; object-fit: cover;">
                        }
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted small flex-grow-1">
                                @(product.Description.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)
                            </p>
                            
                            <div class="mb-2">
                                <span class="badge bg-secondary">@product.Faculty?.Name</span>
                                @if (product.IsApproved)
                                {
                                    <span class="badge bg-success" data-translate="approved">Approved</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning" data-translate="pending_approval">Pending Approval</span>
                                }
                                @if (product.StockQuantity <= 0)
                                {
                                    <span class="badge bg-danger" data-translate="out_of_stock">Out of Stock</span>
                                }
                                else if (product.StockQuantity < 10)
                                {
                                    <span class="badge bg-warning" data-translate="low_stock">Low Stock</span>
                                }
                                else
                                {
                                    <span class="badge bg-success" data-translate="in_stock">In Stock</span>
                                }
                            </div>
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div>
                                    <strong class="text-primary">EGP @product.Price.ToString("N2")</strong>
                                    @if (product.OriginalPrice.HasValue && product.OriginalPrice > product.Price)
                                    {
                                        <small class="text-muted text-decoration-line-through">EGP @product.OriginalPrice.Value.ToString("N2")</small>
                                    }
                                </div>
                                <small class="text-muted">Stock: @product.StockQuantity</small>
                            </div>
                            
                            @if (product.Rating.HasValue)
                            {
                                <div class="mb-3">
                                    <div class="d-flex align-items-center">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            @if (i <= product.Rating)
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-muted"></i>
                                            }
                                        }
                                        <small class="text-muted ms-2">(@product.Rating.Value.ToString("N1"))</small>
                                    </div>
                                </div>
                            }
                            
                            <div class="btn-group w-100" role="group">
                                <a asp-action="EditProduct" asp-route-id="@product.Id" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-info btn-sm" target="_blank">
                                    <i class="bi bi-eye"></i> View
                                </a>
                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                        data-bs-toggle="modal" data-bs-target="#deleteModal" 
                                        data-product-id="@product.Id" data-product-name="@product.Name">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                        
                        <div class="card-footer text-muted small">
                            Created: @product.CreatedAt.ToString("MMM dd, yyyy")
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-box-seam text-muted" style="font-size: 4rem;"></i>
            <h4 class="mt-3 text-muted" data-translate="no_products_yet">No Products Yet</h4>
            <p class="text-muted" data-translate="start_building_your_catalog_by_adding_your_first_product">Start building your catalog by adding your first product.</p>
            <a asp-action="CreateProduct" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add Your First Product
            </a>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel" data-translate="confirm_delete">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the product "<span id="productName"></span>"? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-translate="cancel">Cancel</button>
                <form asp-action="DeleteProduct" method="post" id="deleteForm">
                    <input type="hidden" name="id" id="productId" />
                    <button type="submit" class="btn btn-danger" data-translate="delete_product">Delete Product</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function(event) {
                    const button = event.relatedTarget;
                    const productId = button.getAttribute('data-product-id');
                    const productName = button.getAttribute('data-product-name');
                    
                    const productIdInput = document.getElementById('productId');
                    const productNameSpan = document.getElementById('productName');
                    
                    productIdInput.value = productId;
                    productNameSpan.textContent = productName;
                });
            }
            
            document.querySelectorAll('.product-img-debug').forEach(function(img) {
                console.log('Product image src:', img.getAttribute('src'));
                console.log('Product image data-img-url:', img.getAttribute('data-img-url'));
            });
        });
    </script>
}

