@model UniMart_App.Models.Product
@{
    ViewData["Title"] = "Add New Product";
    Layout = "_DashboardLayout";
}

<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-0" data-translate="add_new_product">Add New Product</h2>
            <p class="text-muted" data-translate="create_a_new_product_for_your_store">Create a new product for your store</p>
        </div>
        <a asp-action="Products" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Products
        </a>
    </div>

    <!-- Product Form -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="mb-0" data-translate="product_information">Product Information</h5>
                </div>
                <div class="card-body">
                    <form asp-action="CreateProduct" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label asp-for="Name" class="form-label" data-translate="product_name">Product Name *</label>
                                <input asp-for="Name" class="form-control" placeholder="Enter product name" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="FacultyId" class="form-label" data-translate="category">Category *</label>
                                <select asp-for="FacultyId" class="form-select">
                                    <option value="">Select Category</option>
                                    @foreach (var faculty in ViewBag.Faculties as List<UniMart_App.Models.Faculty>)
                                    {
                                        <option value="@faculty.Id">@faculty.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="FacultyId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label" data-translate="description">Description *</label>
                            <textarea asp-for="Description" class="form-control" rows="4" placeholder="Describe your product in detail..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label asp-for="Price" class="form-label" data-translate="price_egp">Price (EGP) *</label>
                                <input asp-for="Price" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" />
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="OriginalPrice" class="form-label" data-translate="original_price_egp">Original Price (EGP)</label>
                                <input asp-for="OriginalPrice" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" />
                                <span asp-validation-for="OriginalPrice" class="text-danger"></span>
                                <small class="form-text text-muted" data-translate="leave_empty_if_no_discount">Leave empty if no discount</small>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="StockQuantity" class="form-label" data-translate="stock_quantity">Stock Quantity *</label>
                                <input asp-for="StockQuantity" type="number" min="0" class="form-control" placeholder="0" />
                                <span asp-validation-for="StockQuantity" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Specifications" class="form-label" data-translate="specifications">Specifications</label>
                            <textarea asp-for="Specifications" class="form-control" rows="3" placeholder="Technical specifications, features, dimensions, etc."></textarea>
                            <span asp-validation-for="Specifications" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="imageFiles" class="form-label" data-translate="product_images">Product Images</label>
                            <input type="file" name="imageFiles" id="imageFiles" class="form-control" accept="image/*" multiple />
                            <small class="form-text text-muted" data-translate="upload_up_to_5_images_supported_formats_jpg_png_gif_max_size_per_image_5mb">Upload up to 5 images. Supported formats: JPG, PNG, GIF. Max size per image: 5MB</small>
                            <div id="imagePreviewsContainer" class="mt-3 row g-2"></div>
                        </div>

                        <div class="d-flex justify-content-end gap-2">
                            <a asp-action="Products" class="btn btn-secondary" data-translate="cancel">Cancel</a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle"></i> Create Product
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="mb-0" data-translate="tips_for_success">Tips for Success</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6><i class="bi bi-lightbulb text-warning"></i> Product Name</h6>
                        <p class="small text-muted" data-translate="use_clear_descriptive_names_that_customers_will_search_for">Use clear, descriptive names that customers will search for.</p>
                    </div>
                    
                    <div class="mb-3">
                        <h6><i class="bi bi-image text-info"></i> Product Images</h6>
                        <p class="small text-muted" data-translate="high-quality_images_increase_sales_use_well-lit_clear_photos">High-quality images increase sales. Use well-lit, clear photos.</p>
                    </div>
                    
                    <div class="mb-3">
                        <h6><i class="bi bi-text-paragraph text-success"></i> Description</h6>
                        <p class="small text-muted" data-translate="include_key_features_benefits_and_use_cases_be_detailed_but_concise">Include key features, benefits, and use cases. Be detailed but concise.</p>
                    </div>
                    
                    <div class="mb-3">
                        <h6><i class="bi bi-tags text-primary"></i> Pricing</h6>
                        <p class="small text-muted" data-translate="research_competitor_prices_consider_offering_discounts_for_new_products">Research competitor prices. Consider offering discounts for new products.</p>
                    </div>
                    
                    <div class="mb-0">
                        <h6><i class="bi bi-box text-secondary"></i> Inventory</h6>
                        <p class="small text-muted" data-translate="keep_accurate_stock_levels_to_avoid_overselling">Keep accurate stock levels to avoid overselling.</p>
                    </div>
                </div>
            </div>

            <!-- Image Preview -->
            <div class="card shadow mt-4" id="imagePreviewCard" style="display: none;">
                <div class="card-header">
                    <h5 class="mb-0" data-translate="image_preview">Image Preview</h5>
                </div>
                <div class="card-body text-center">
                    <img id="imagePreview" src="" alt="Preview" class="img-fluid rounded" style="max-height: 200px;" />
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const imageInput = document.getElementById('imageFiles');
            const previewsContainer = document.getElementById('imagePreviewsContainer');
            
            imageInput.addEventListener('change', function(event) {
                previewsContainer.innerHTML = ''; // Clear existing previews
                
                const files = Array.from(event.target.files);
                files.forEach((file, index) => {
                    if (index >= 5) return; // Limit to 5 images
                    
                    const reader = new FileReader();
                    const previewCol = document.createElement('div');
                    previewCol.className = 'col-4 col-md-3';
                    
                    const previewCard = document.createElement('div');
                    previewCard.className = 'card h-100';
                    
                    const previewImage = document.createElement('img');
                    previewImage.className = 'card-img-top';
                    previewImage.style.height = '120px';
                    previewImage.style.objectFit = 'cover';
                    
                    const removeButton = document.createElement('button');
                    removeButton.className = 'btn btn-sm btn-danger position-absolute top-0 end-0 m-1';
                    removeButton.innerHTML = '<i class="bi bi-x"></i>';
                    removeButton.onclick = function() {
                        previewCol.remove();
                        
                        // Create a new FileList without the removed image
                        const dt = new DataTransfer();
                        const input = document.getElementById('imageFiles');
                        const { files } = input;
                        
                        for (let i = 0; i < files.length; i++) {
                            const file = files[i];
                            if (i !== index) dt.items.add(file);
                        }
                        
                        input.files = dt.files;
                    };
                    
                    reader.onload = function(e) {
                        previewImage.src = e.target.result;
                    };
                    
                    previewCard.appendChild(previewImage);
                    previewCard.appendChild(removeButton);
                    previewCol.appendChild(previewCard);
                    previewsContainer.appendChild(previewCol);
                    
                    reader.readAsDataURL(file);
                });
            });

            // Auto-calculate discount percentage
            const priceInput = document.querySelector('input[name="Price"]');
            const originalPriceInput = document.querySelector('input[name="OriginalPrice"]');
            
            function updateDiscountDisplay() {
                const price = parseFloat(priceInput.value) || 0;
                const originalPrice = parseFloat(originalPriceInput.value) || 0;
                
                if (originalPrice > price && price > 0) {
                    const discount = ((originalPrice - price) / originalPrice * 100).toFixed(0);
                    originalPriceInput.title = `${discount}% discount`;
                } else {
                    originalPriceInput.title = '';
                }
            }
            
            priceInput.addEventListener('input', updateDiscountDisplay);
            originalPriceInput.addEventListener('input', updateDiscountDisplay);
        });
    </script>
}

