@model List<UniMart_App.Models.Notification>
@{
    ViewData["Title"] = "Notifications";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/front-end/Notifications.css">
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 data-translate="notifications">Notifications</h4>
        <div>
            <form asp-controller="Notifications" asp-action="MarkAllAsRead" method="post">
                <button type="submit" class="btn btn-sm btn-outline-primary" data-translate="mark_all_as_read">Mark All as Read</button>
            </form>
        </div>
    </div>

    <div class="notification-container">
        @if (Model != null && Model.Any())
        {
            @foreach (var notification in Model)
            {
                <div class="notification-card @(notification.IsRead ? "read" : "unread")">
                    <div class="notification-icon">
                        @switch (notification.Type)
                        {
                            case "Order":
                                <i class="bi bi-bag-check text-primary"></i>
                                break;
                            case "System":
                                <i class="bi bi-gear text-secondary"></i>
                                break;
                            case "Message":
                                <i class="bi bi-chat-dots text-success"></i>
                                break;
                            case "Alert":
                                <i class="bi bi-exclamation-circle text-danger"></i>
                                break;
                            default:
                                <i class="bi bi-bell text-info"></i>
                                break;
                        }
                    </div>
                    <div class="notification-content">
                        <div class="d-flex justify-content-between">
                            <h6 class="notification-title">@notification.Title</h6>
                            <small class="text-muted">@notification.CreatedAt.ToString("MMM dd, yyyy")</small>
                        </div>
                        <p class="notification-message">@notification.Message</p>
                        @if (!string.IsNullOrEmpty(notification.ActionUrl))
                        {
                            <a href="@notification.ActionUrl" class="btn btn-sm btn-primary" data-translate="view_details">View Details</a>
                        }
                    </div>
                    <div class="notification-actions">
                        <form class="notification-mark-form" asp-controller="Notifications" asp-action="MarkAsRead" method="post">
                            <input type="hidden" name="notificationId" value="@notification.Id" />
                            <button type="submit" class="btn btn-sm @(notification.IsRead ? "btn-outline-secondary" : "btn-outline-primary")">
                                @(notification.IsRead ? "Mark as Unread" : "Mark as Read")
                            </button>
                        </form>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <i class="bi bi-bell-slash display-1 text-muted"></i>
                <h5 class="mt-3" data-translate="no_notifications">No Notifications</h5>
                <p class="text-muted" data-translate="you_dont_have_any_notifications_at_the_moment">You don't have any notifications at the moment.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // AJAX Mark as Read/Unread
            document.querySelectorAll('.notification-mark-form').forEach(function(form) {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();
                    var formData = new FormData(form);
                    fetch(form.action, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Optionally, reload the page or update the UI in-place
                            location.reload();
                        }
                    });
                });
            });
        });
    </script>
}
