@using System.Linq
@model UniMart_App.Models.Product
@{
    ViewData["Title"] = "Product Details";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/front-end/ProductDetails.css">
    <link rel="stylesheet" href="~/css/front-end/RelatedProducts.css">
}

<!-- Single Product -->
<section class="container sproduct">
    <div class="row mt-5">
        <!-- Product Images -->
        <div class="col-lg-5 col-md-12 col-12">
            @if (Model.ProductImages != null && Model.ProductImages.Any())
            {
                <!-- Main image -->
                <img class="img-fluid w-100 pb-2" id="mainProductImage" src="@Model.ProductImages.OrderBy(img => img.Id).First().ImageUrl" alt="@Model.Name">
                <!-- Remaining images as thumbnails below -->
                <div class="small-img-group d-flex mt-2">
                    @foreach (var image in Model.ProductImages.OrderBy(img => img.Id).Skip(1))
                    {
                        <div class="small-img-col me-2">
                            <img src="@image.ImageUrl" width="80" class="small-img border" alt="@Model.Name">
                        </div>
                    }
                </div>
            }
            else
            {
                <img class="img-fluid w-100 pb-2" src="/img/placeholder.png" alt="No image">
            }
        </div>

        <!-- Product Information -->
        <div class="col-md-6">
            @if (Model.Faculty != null)
            {
                <p class="m-1 p-1 text-primary">For @Model.Faculty.Name Students</p>
            }
            <h2 class="mb-3">@Model.Name</h2>
            <div class="mb-3">
                <span class="h3 me-2">EGP @Model.Price.ToString("0.00")</span>
                @if (Model.OriginalPrice.HasValue && Model.OriginalPrice.Value > Model.Price)
                {
                    <span class="h5 m-1 text-muted"><s>EGP @Model.OriginalPrice.Value.ToString("0.00")</s></span>
                    <span class="h10 m-1 text-success">Save @(Math.Round((1 - Model.Price / Model.OriginalPrice.Value) * 100))%</span>
                }
            </div>
            <div class="mb-3">
                <!-- Product Rating Display -->
                            <div class="d-flex align-items-center mb-3">
                                <div class="text-warning">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= Math.Round(Model.AverageRating))
                                        {
                                            <i class="bi bi-star-fill star"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star star"></i>
                                        }
                                    }
                                </div>
                                <span class="ms-2">@Model.AverageRating.ToString("0.0")/5</span>
                                <span class="review-count ms-2">(@(Model.Ratings?.Count ?? 0))</span>
                            </div>
                </div>
                <!-- Product Rating Submission -->
                @if (User.Identity.IsAuthenticated)
                {
                    <form id="submitRatingForm" asp-action="AddRating" asp-controller="ProductRating" method="post" class="card p-3 shadow-sm mb-3">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <div class="d-flex align-items-center mb-2" id="starRatingGroup">
                            <label class="me-2" data-translate="your_rating">Your Rating:</label>
                            @for (int i = 1; i <= 5; i++)
                            {
                                var starId = $"star{i}_{Model.Id}";
                                <input type="radio" class="btn-check" name="rating" id="@starId" value="@i" autocomplete="off">
                                <label class="btn btn-sm btn-outline-warning star-label" for="@starId" data-star="@i"><i class="bi bi-star"></i></label>
                            }
                        </div>
                        <div class="mb-2">
                            <textarea class="form-control" name="comment" rows="1" placeholder="Optional Comment..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-outline-primary btn-sm" data-translate="submit_rating">Submit Rating</button>
                    </form>
                }
            </div>
            @if (Model.StockQuantity <= 5 && Model.StockQuantity > 0)
            {
                <div>
                    <i class="bi bi-exclamation-circle text-danger"> Only @Model.StockQuantity left in stock - order soon </i>
                </div>
            }
            else if (Model.StockQuantity <= 0)
            {
                <div>
                    <i class="bi bi-exclamation-circle text-danger"> Out of stock </i>
                </div>
            }
            <!-- Add to Cart and Favorites -->
            <div class="container mt-4">
                <div class="row align-items-center mt-3">
                    <div class="col-auto">
                        <!-- Add to Cart Form -->
                        <form id="addToCartForm" asp-action="AddToCart" asp-controller="Cart" method="post" class="d-flex align-items-center">
                            <input type="hidden" name="productId" id="mainProductId" value="@Model.Id" />
                            <input type="number" name="quantity" id="quantity" value="1" min="1" max="@Model.StockQuantity" class="form-control text-center mx-2" style="width: 60px;" />
                            <input type="hidden" name="returnUrl" value="@Url.Action("Index", "Cart")" />
                            <button type="submit" class="btn btn-primary" id="addToCartBtn">
                                <i class="bi bi-cart-plus me-1"></i> Add to Cart
                            </button>
                        </form>
                    </div>
                    <div class="col-auto">
                        <form id="addToFavoritesForm" asp-action="Add" asp-controller="Favorites" method="post">
                            <input type="hidden" name="productId" value="@Model.Id" />
                            <button type="submit" class="btn btn-outline-danger wishlist-btn" id="addToFavoritesBtn" data-product-id="@Model.Id">
                                <i class="bi bi-heart"></i> Add to Favorites
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            <!-- Product Details Tabs Card -->
            <div class="card mb-4 border-0 shadow-sm rounded mt-4" style="background: #f8f9fa;">
                <div class="card-body p-4">
                    <ul class="nav nav-tabs mb-3" id="productDetailsTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="desc-tab" data-bs-toggle="tab" data-bs-target="#desc" type="button" role="tab" aria-controls="desc" aria-selected="true" data-translate="description">Description</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="specs-tab" data-bs-toggle="tab" data-bs-target="#specs" type="button" role="tab" aria-controls="specs" aria-selected="false" data-translate="specifications">Specifications</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="productDetailsTabContent">
                        <div class="tab-pane fade show active" id="desc" role="tabpanel" aria-labelledby="desc-tab">
                            <p class="text-muted mb-0" style="line-height: 1.7;">@Model.Description</p>
                        </div>
                        <div class="tab-pane fade" id="specs" role="tabpanel" aria-labelledby="specs-tab">
                            <table class="table table-sm mb-0 text-muted align-middle" style="line-height: 1.7;">
                                <tbody>
                                    <tr>
                                        <th scope="row" class="fw-normal" data-translate="specifications">Specifications</th>
                                        <td>@Model.Specifications</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="fw-normal" data-translate="faculty">Faculty</th>
                                        <td>@Model.Faculty?.Name</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="fw-normal" data-translate="stock">Stock</th>
                                        <td>@Model.StockQuantity</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" class="fw-normal" data-translate="price">Price</th>
                                        <td>
                                            <span class="h5">EGP @Model.Price.ToString("0.00")</span>
                                            @if (Model.OriginalPrice.HasValue && Model.OriginalPrice.Value > Model.Price)
                                            {
                                                <span class="h6 text-muted"><s>EGP @Model.OriginalPrice.Value.ToString("0.00")</s></span>
                                                <span class="text-success">Save @(Math.Round((1 - Model.Price / Model.OriginalPrice.Value) * 100))%</span>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Reviews List -->
            <div class="mt-4">
                <h5 data-translate="reviews">Reviews</h5>
                <div id="reviewsList">
                @if (Model.Ratings != null && Model.Ratings.Any())
                {
                    @foreach (var review in Model.Ratings.OrderByDescending(r => r.CreatedAt))
                    {
                        <div class="card mb-3 shadow border-0 rounded-3 bg-light w-100">
                            <div class="card-body p-3 p-md-4">
                                <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center mb-2 flex-wrap gap-1">
                                    <div class="text-warning me-0 me-md-2 mb-1 mb-md-0">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= review.RatingValue)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star"></i>
                                            }
                                        }
                                    </div>
                                    <span class="fw-bold me-0 me-md-2 text-break">@review.User?.UserName</span>
                                    <span class="text-muted small ms-0 ms-md-auto">@review.CreatedAt.ToString("MMM dd, yyyy")</span>
                                </div>
                                <hr class="my-2" />
                                @if (!string.IsNullOrEmpty(review.Comment))
                                {
                                    <p class="mb-0 text-break">@review.Comment</p>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-secondary">No reviews yet. Be the first to review this product!</div>
                }
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Related Products Section -->
<div class="container py-5">
    <h2 class="text-center mb-5" data-translate="related_products">Related Products</h2>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @if (ViewBag.RelatedProducts != null)
        {
            foreach (var product in ViewBag.RelatedProducts)
            {
                <div class="col d-flex align-items-stretch">
                    <a href="@Url.Action("Details", "Products", new { id = product.Id })" class="card-link w-100 h-100">
                        <div class="card related-product-card h-100">
                            @if (product.ProductImages != null && product.ProductImages.Count > 0)
                            {
                                var imageUrl = ((IEnumerable<UniMart_App.Models.ProductImage>)product.ProductImages).OrderBy(img => img.Id).FirstOrDefault()?.ImageUrl;
                                if (!string.IsNullOrEmpty(imageUrl))
                                {
                                    <img src="@imageUrl" class="card-img-top" alt="@product.Name">
                                }
                            }
                            else
                            {
                                <img src="/img/default-profile.png" class="card-img-top" alt="No image">
                            }
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@product.Name</h5>
                                <div class="product-description flex-grow-1">@product.Description</div>
                                <div class="d-flex align-items-center mb-2">
                                    <div class="text-warning">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Round(product.AverageRating))
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star"></i>
                                            }
                                        }
                                    </div>
                                    <span class="ms-2">@product.AverageRating.ToString("0.0")/5</span>
                                    <span class="review-count ms-2">(@(product.Ratings?.Count ?? 0))</span>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-auto">
                                    <div>
                                        <span class="fw-bold">EGP @product.Price.ToString("0.00")</span>
                                        @if (product.OriginalPrice != null && product.OriginalPrice > product.Price)
                                        {
                                            <span class="text-muted ms-1"><s>EGP @product.OriginalPrice.ToString("0.00")</s></span>
                                            <span class="ms-1 text-success">Save @(Math.Round((1 - product.Price / product.OriginalPrice) * 100))%</span>
                                        }
                                    </div>
                                    <form class="related-add-to-cart-form d-inline" data-product-id="@product.Id" action="@Url.Action("AddToCart", "Cart")" method="post">
                                        <input type="hidden" name="productId" value="@product.Id" />
                                        <input type="hidden" name="quantity" value="1" />
                                        <input type="hidden" name="returnUrl" value="@Url.Action("Details", "Products", new { id = product.Id })" />
                                        <button type="submit" class="add-to-cart-btn btn btn-outline-primary btn-sm p-2" title="Add to Cart">
                                            <i class="bi bi-cart-plus"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="col">
                <div class="card h-100">
                    <img src="/img/product-details/img-5.png" class="card-img-top" alt="Related Product">
                    <div class="card-body">
                        <h5 class="card-title" data-translate="clinically_oriented_anatomy">Clinically Oriented Anatomy</h5>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="card-text mb-0" data-translate="6999">$69.99</p>
                            <a href="#" class="text-primary add-to-cart-btn" data-product-id="0">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card h-100">
                    <img src="/img/product-details/img-6.png" class="card-img-top" alt="Related Product">
                    <div class="card-body">
                        <h5 class="card-title" data-translate="netters_atlas_of_human_anatomy">Netter's Atlas of Human Anatomy</h5>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="card-text mb-0" data-translate="6999">$69.99</p>
                            <a href="#" class="text-primary add-to-cart-btn" data-product-id="0">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card h-100">
                    <img src="/img/product-details/img-7.png" class="card-img-top" alt="Related Product">
                    <div class="card-body">
                        <h5 class="card-title" data-translate="essential_clinical_anatomy">Essential Clinical Anatomy</h5>
                        <div class="d-flex justify-content-between align-items-center">
                            <p class="card-text mb-0" data-translate="6999">$69.99</p>
                            <a href="#" class="text-primary add-to-cart-btn" data-product-id="0">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Toast Container for Related Products -->
<div class="toast-container position-fixed top-50 start-50 translate-middle p-3" id="relatedProductToastContainer">
    <div class="toast" id="relatedProductToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            <i class="bi bi-check-circle me-2"></i> Item added to cart successfully!
        </div>
    </div>
</div>

<!-- Toast for Add to Favorites -->
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
    <div class="toast" id="favoritesToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            <i class="bi bi-heart-fill text-danger me-2"></i> Added to favorites!
        </div>
    </div>
</div>

<!-- Toast for Add to Cart -->
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
    <div class="toast" id="cartToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            <i class="bi bi-cart-plus text-success me-2"></i> Added to cart!
        </div>
    </div>
</div>
<!-- Toast for Submit Rating -->
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
    <div class="toast" id="ratingToast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            <i class="bi bi-star-fill text-warning me-2"></i> Thank you for your rating!
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Quantity selector (only if the element exists)
            var increaseBtn = document.getElementById('increase');
            var decreaseBtn = document.getElementById('decrease');
            var quantityInput = document.getElementById('quantity');
            if (increaseBtn && quantityInput) {
                increaseBtn.addEventListener('click', function() {
                    quantityInput.value = parseInt(quantityInput.value) + 1;
                });
            }
            if (decreaseBtn && quantityInput) {
                decreaseBtn.addEventListener('click', function() {
                    if (parseInt(quantityInput.value) > 1) {
                        quantityInput.value = parseInt(quantityInput.value) - 1;
                    }
                });
            }

            // Function to show toast for 3 seconds
            function showToast(toastId) {
                const toastEl = document.getElementById(toastId);
                const toast = new bootstrap.Toast(toastEl, { delay: 3000 });
                toast.show();
            }

            // Add to Cart (AJAX)
            const addToCartForm = document.getElementById('addToCartForm');
            if (addToCartForm) {
                addToCartForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(addToCartForm);
                    fetch(addToCartForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => {
                        if (response.ok) {
                            const toastEl = document.getElementById('cartToast');
                            const toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                            toast.show();
                        }
                    });
                });
            }
            // Submit Rating (AJAX)
            const submitRatingForm = document.getElementById('submitRatingForm');
            if (submitRatingForm) {
                submitRatingForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(submitRatingForm);
                    fetch(submitRatingForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => {
                        if (response.ok) {
                            const toastEl = document.getElementById('ratingToast');
                            const toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                            toast.show();
                        }
                    });
                });
            }
            // Product image gallery
            const mainImg = document.querySelector('.sproduct img.img-fluid');
            const smallImgs = document.querySelectorAll('.small-img');
            smallImgs.forEach(img => {
                img.addEventListener('click', function() {
                    mainImg.src = this.src;
                });
            });

            // Add to Favorites (AJAX)
            const addToFavoritesForm = document.getElementById('addToFavoritesForm');
            if (addToFavoritesForm) {
                addToFavoritesForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(addToFavoritesForm);
                    fetch(addToFavoritesForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => {
                        if (response.ok) {
                            const toastEl = document.getElementById('favoritesToast');
                            const toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                            toast.show();
                        }
                    });
                });
            }
            // Related products Add to Cart (AJAX, per card)
            document.querySelectorAll('.related-add-to-cart-form').forEach(function(form) {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(form);
                    fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                    .then(response => {
                        if (response.ok) {
                            const toastEl = document.getElementById('cartToast');
                            const toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                            toast.show();
                        }
                    });
                });
            });
        });
           document.addEventListener('DOMContentLoaded', function() {
                        const starLabels = document.querySelectorAll('#starRatingGroup .star-label');
                        const starInputs = document.querySelectorAll('#starRatingGroup .btn-check');
                        function updateStars(selected) {
                            starLabels.forEach(label => {
                                const star = parseInt(label.getAttribute('data-star'));
                                const icon = label.querySelector('i');
                                if (star <= selected) {
                                    icon.classList.remove('bi-star');
                                    icon.classList.add('bi-star-fill');
                                } else {
                                    icon.classList.remove('bi-star-fill');
                                    icon.classList.add('bi-star');
                                }
                            });
                        }
                        starInputs.forEach(input => {
                            input.addEventListener('change', function() {
                                updateStars(parseInt(this.value));
                            });
                        });
                        // On page load, show selection if any
                        const checked = Array.from(starInputs).find(i => i.checked);
                        if (checked) updateStars(parseInt(checked.value));

                        // Reset form and append review after successful AJAX submit
                        const submitRatingForm = document.getElementById('submitRatingForm');
                        if (submitRatingForm) {
                            submitRatingForm.addEventListener('submit', function(e) {
                                e.preventDefault();
                                const formData = new FormData(submitRatingForm);
                                fetch(submitRatingForm.action, {
                                    method: 'POST',
                                    body: formData,
                                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data && data.success) {
                                        // Reset form
                                        submitRatingForm.reset();
                                        updateStars(0);
                                        // Show toast
                                        const toastEl = document.getElementById('ratingToast');
                                        const toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                                        toast.show();
                                        // Append new review to reviews list
                                        const reviewsList = document.getElementById('reviewsList');
                                        if (reviewsList) {
                                            const reviewCard = document.createElement('div');
                                            reviewCard.className = 'card mb-3 shadow border-0 rounded-3 bg-light w-100';
                                            reviewCard.innerHTML = `
                                                <div class="card-body p-3 p-md-4">
                                                    <div class="d-flex flex-column flex-md-row align-items-start align-items-md-center mb-2 flex-wrap gap-1">
                                                        <div class="text-warning me-0 me-md-2 mb-1 mb-md-0">
                                                            ${'★'.repeat(data.ratingValue).replace(/★/g, '<i class=\'bi bi-star-fill\'></i>')}${'☆'.repeat(5-data.ratingValue).replace(/☆/g, '<i class=\'bi bi-star\'></i>')}
                                                        </div>
                                                        <span class="fw-bold me-0 me-md-2 text-break">${data.userName || 'You'}</span>
                                                        <span class="text-muted small ms-0 ms-md-auto">${data.createdAt || (new Date()).toLocaleDateString()}</span>
                                                    </div>
                                                    <hr class="my-2" />
                                                    ${data.comment ? `<p class='mb-0 text-break'>${data.comment}</p>` : ''}
                                                </div>
                                            `;
                                            reviewsList.prepend(reviewCard);
                                        }
                                    }
                                });
                            });
                        }
                    });
    </script>
}
