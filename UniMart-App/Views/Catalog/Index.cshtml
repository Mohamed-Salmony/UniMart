@model UniMart_App.ViewModels.CatalogViewModel
@{
    ViewData["Title"] = "Product Catalog";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/front-end/Catalog.css">
}

<div class="container mt-4">
    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-lg-3 mb-4">
            <div class="filter-container">
                <h5 class="filter-title" data-translate="filters">Filters</h5>
                
                <!-- Search -->
                <div class="filter-section">
                    <h6 data-translate="search">Search</h6>
                    <form asp-action="Index" method="get" class="search-form">
                        <input type="hidden" name="faculty" value="@Model.CurrentFaculty" />
                        <input type="hidden" name="sort" value="@Model.SortOption" />
                        <div class="input-group">
                            <input type="text" name="search" class="form-control" placeholder="Search products..." value="@Model.SearchQuery">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </form>
                </div>
                
                <!-- Faculties -->
                <div class="filter-section">
                    <h6 data-translate="faculties">Faculties</h6>
                    <div class="category-list">
                        <a href="@Url.Action("Index", new { sort = Model.SortOption, search = Model.SearchQuery })" 
                           class="category-item @(string.IsNullOrEmpty(Model.CurrentFaculty) ? "active" : "")">
                            All Faculties
                        </a>
                        @foreach (var faculty in Model.Faculties)
                        {
                            <a href="@Url.Action("Index", new { faculty = faculty.Name, sort = Model.SortOption, search = Model.SearchQuery })" 
                               class="category-item @(Model.CurrentFaculty == faculty.Name ? "active" : "")">
                                @faculty.Name
                            </a>
                        }
                    </div>
                </div>
                
                <!-- Sort Options -->
                <div class="filter-section">
                    <h6 data-translate="sort_by">Sort By</h6>
                    <div class="sort-options">
                        <a href="@Url.Action("Index", new { faculty = Model.CurrentFaculty, sort = "newest", search = Model.SearchQuery })" 
                           class="sort-option @(Model.SortOption == "newest" ? "active" : "")">
                            Newest
                        </a>
                        <a href="@Url.Action("Index", new { faculty = Model.CurrentFaculty, sort = "price_asc", search = Model.SearchQuery })" 
                           class="sort-option @(Model.SortOption == "price_asc" ? "active" : "")">
                            Price: Low to High
                        </a>
                        <a href="@Url.Action("Index", new { faculty = Model.CurrentFaculty, sort = "price_desc", search = Model.SearchQuery })" 
                           class="sort-option @(Model.SortOption == "price_desc" ? "active" : "")">
                            Price: High to Low
                        </a>
                        <a href="@Url.Action("Index", new { faculty = Model.CurrentFaculty, sort = "name_asc", search = Model.SearchQuery })" 
                           class="sort-option @(Model.SortOption == "name_asc" ? "active" : "")">
                            Name: A to Z
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Product Grid -->
        <div class="col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h4>
                    @if (!string.IsNullOrEmpty(Model.CurrentFaculty))
                    {
                        <span>@Model.CurrentFaculty</span>
                    }
                    else
                    {
                        <span data-translate="all_products">All Products</span>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.SearchQuery))
                    {
                        <small class="text-muted ms-2">Search results for: "@Model.SearchQuery"</small>
                    }
                </h4>
                <span class="product-count">@Model.Products.Count products</span>
            </div>
            
            @if (Model.Products.Any())
            {
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="product-card">
                                <a asp-action="Details" asp-route-id="@product.Id" class="product-link">
                                    <div class="product-image">
                                        @if (product.ProductImages != null && product.ProductImages.Any())
                                        {
                                            <img src="@product.ProductImages.First().ImageUrl" alt="@product.Name" class="img-fluid">
                                        }
                                        else
                                        {
                                            <img src="/img/product-placeholder.png" alt="@product.Name" class="img-fluid">
                                        }
                                    </div>
                                    <div class="product-info">
                                        <h5 class="product-name">@product.Name</h5>
                                        <p class="product-category">@product.Faculty.Name</p>
                                        <div class="product-meta">
                                            <span class="product-price">$@product.Price.ToString("F2")</span>
                                            <div class="product-rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= Math.Round(product.AverageRating))
                                                    {
                                                        <i class="bi bi-star-fill"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-star"></i>
                                                    }
                                                }
                                                <small>(@product.Ratings.Count)</small>
                                            </div>
                                        </div>
                                        <p class="product-seller">Seller: @product.User.FullName</p>
                                    </div>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-search display-1 text-muted"></i>
                    <h5 class="mt-3" data-translate="no_products_found">No Products Found</h5>
                    <p class="text-muted" data-translate="we_couldnt_find_any_products_matching_your_criteria">We couldn't find any products matching your criteria.</p>
                    <a asp-action="Index" class="btn btn-primary" data-translate="view_all_products">View All Products</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add any catalog-specific JavaScript here
        });
    </script>
}
